{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\react_rent\\\\react_rent\\\\src\\\\pages\\\\CityList\\\\index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/NavBar';\nimport { axiosAPI as axios } from '../../utils';\nimport { getCurrentCity } from '../../utils/city';\nimport { Space, IndexBar, List as AList } from 'antd-mobile';\nimport { SearchOutline } from 'antd-mobile-icons';\nimport { setCity } from '../../utils/city';\n// import { get } from 'store'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CityLists() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cityList\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: '城市选择',\n      right: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '18px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: /*#__PURE__*/_jsxDEV(SearchOutline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AntList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n// 自定义获取城市列表的hook\n_c = CityLists;\nconst useCityList = () => {\n  _s();\n  const [aList, setAList] = useState({});\n  const [aIndex, setAIndex] = useState([]);\n  useEffect(() => {\n    const getCityData = async () => {\n      // 获取一级城市数据\n      const result = await axios.get('/area/city', {\n        params: {\n          level: 1\n        }\n      });\n      // console.log(result)\n      // 获取热门城市数据\n      const hotResult = await axios.get('/area/hot');\n      // console.log(hotResult.data.body)\n      // 获取城市列表的列表索引\n      const {\n        cityList,\n        cityIndex\n      } = formatData(result.data.body);\n      // 获取热门城市，插入到城市列表前面\n      cityList['hot'] = hotResult.data.body;\n      cityIndex.unshift('hot');\n      // 获取当前城市\n      const currentCity = await getCurrentCity();\n      cityList['#'] = currentCity;\n      cityIndex.unshift('#');\n\n      // 更新城市列表和城市索引\n      setAList(cityList);\n      setAIndex(cityIndex);\n    };\n    getCityData();\n  }, []);\n  return {\n    aList,\n    aIndex\n  };\n};\n\n// 城市列表数据排序\n_s(useCityList, \"BrSOOlpDJjpSLPrIw/78l4dyPIQ=\");\nconst formatData = list => {\n  const cityList = {};\n  list.forEach(item => {\n    // 获取当前城市的首字母\n    const first = item.short.substr(0, 1);\n    // console.log(first)\n    if (cityList[first]) {\n      cityList[first].push(item);\n    } else {\n      cityList[first] = [item];\n    }\n  });\n  // 排序列表的索引字母\n  const cityIndex = Object.keys(cityList).sort();\n  return {\n    cityList,\n    cityIndex\n  };\n};\n// 更改当前城市\nconst changeCity = list => {\n  console.log(list);\n};\nconst AntList = () => {\n  _s2();\n  const {\n    aList,\n    aIndex\n  } = useCityList();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: window.innerHeight\n    },\n    children: /*#__PURE__*/_jsxDEV(IndexBar, {\n      className: \"cityList\",\n      children: Object.keys(aList).sort((first, next) => {\n        // 创建'a'的unicode位置\n        const charCodeOfa = 'a'.charCodeAt(0);\n        // 根据'a'的unicode位置生成字母表\n        const alphabet = Array.from(new Array(26), (ele, index) => {\n          return String.fromCharCode(charCodeOfa + index);\n        });\n        //创建Index的排列顺序\n        const order = ['#', 'hot', ...alphabet];\n        // console.log(order)\n        return order.indexOf(first) - order.indexOf(next);\n      }).map(k => {\n        var m = [];\n        for (var i = 0; i < aList[k].length; i++) {\n          m.push(aList[k][i]);\n        }\n        return /*#__PURE__*/_jsxDEV(IndexBar.Panel, {\n          index: k === 'hot' ? '热' : k,\n          title: k === '#' ? '当前城市' : k === 'hot' ? '热门城市' : k.toUpperCase(),\n          className: \"city\",\n          children: /*#__PURE__*/_jsxDEV(AList, {\n            children: m.map((list, index) => {\n              return /*#__PURE__*/_jsxDEV(AList.Item, {\n                clickable: true,\n                arrow: false,\n                onClick: () => {\n                  changeCity(list);\n                },\n                className: \"cityItem\",\n                children: list.label\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, k, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s2(AntList, \"vjrKEb/gIarmPaHREZ3x+SfrsnI=\", false, function () {\n  return [useCityList];\n});\n_c2 = AntList;\nvar _c, _c2;\n$RefreshReg$(_c, \"CityLists\");\n$RefreshReg$(_c2, \"AntList\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","axiosAPI","axios","getCurrentCity","Space","IndexBar","List","AList","SearchOutline","setCity","CityLists","fontSize","useCityList","aList","setAList","aIndex","setAIndex","getCityData","result","get","params","level","hotResult","cityList","cityIndex","formatData","data","body","unshift","currentCity","list","forEach","item","first","short","substr","push","Object","keys","sort","changeCity","console","log","AntList","height","window","innerHeight","next","charCodeOfa","charCodeAt","alphabet","Array","from","ele","index","String","fromCharCode","order","indexOf","map","k","m","i","length","toUpperCase","label"],"sources":["E:/Github/react_rent/react_rent/src/pages/CityList/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../../components/NavBar'\r\nimport { axiosAPI as axios } from '../../utils'\r\nimport { getCurrentCity } from '../../utils/city'\r\nimport { Space, IndexBar, List as AList } from 'antd-mobile'\r\nimport { SearchOutline } from 'antd-mobile-icons'\r\nimport { setCity } from '../../utils/city'\r\n// import { get } from 'store'\r\nexport default function CityLists() {\r\n  return (\r\n    <div className=\"cityList\">\r\n      <Navbar\r\n        title={'城市选择'}\r\n        right={\r\n          <div style={{ fontSize: '18px' }}>\r\n            <Space>\r\n              <SearchOutline />\r\n            </Space>\r\n          </div>\r\n        }\r\n      />\r\n      <AntList />\r\n    </div>\r\n  )\r\n}\r\n\r\n// 自定义获取城市列表的hook\r\nconst useCityList = () => {\r\n  const [aList, setAList] = useState({})\r\n  const [aIndex, setAIndex] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getCityData = async () => {\r\n      // 获取一级城市数据\r\n      const result = await axios.get('/area/city', { params: { level: 1 } })\r\n      // console.log(result)\r\n      // 获取热门城市数据\r\n      const hotResult = await axios.get('/area/hot')\r\n      // console.log(hotResult.data.body)\r\n      // 获取城市列表的列表索引\r\n      const { cityList, cityIndex } = formatData(result.data.body)\r\n      // 获取热门城市，插入到城市列表前面\r\n      cityList['hot'] = hotResult.data.body\r\n      cityIndex.unshift('hot')\r\n      // 获取当前城市\r\n      const currentCity = await getCurrentCity()\r\n      cityList['#'] = currentCity\r\n      cityIndex.unshift('#')\r\n\r\n      // 更新城市列表和城市索引\r\n      setAList(cityList)\r\n      setAIndex(cityIndex)\r\n    }\r\n    getCityData()\r\n  }, [])\r\n  return { aList, aIndex }\r\n}\r\n\r\n// 城市列表数据排序\r\nconst formatData = (list) => {\r\n  const cityList = {}\r\n  list.forEach((item) => {\r\n    // 获取当前城市的首字母\r\n    const first = item.short.substr(0, 1)\r\n    // console.log(first)\r\n    if (cityList[first]) {\r\n      cityList[first].push(item)\r\n    } else {\r\n      cityList[first] = [item]\r\n    }\r\n  })\r\n  // 排序列表的索引字母\r\n  const cityIndex = Object.keys(cityList).sort()\r\n  return { cityList, cityIndex }\r\n}\r\n// 更改当前城市\r\nconst changeCity = (list) => {\r\n  console.log(list)\r\n}\r\nconst AntList = () => {\r\n  const { aList, aIndex } = useCityList()\r\n  return (\r\n    <div style={{ height: window.innerHeight }}>\r\n      <IndexBar className='cityList'>\r\n        {Object.keys(aList)\r\n          .sort((first, next) => {\r\n            // 创建'a'的unicode位置\r\n            const charCodeOfa = 'a'.charCodeAt(0)\r\n            // 根据'a'的unicode位置生成字母表\r\n            const alphabet = Array.from(new Array(26), (ele, index) => {\r\n              return String.fromCharCode(charCodeOfa + index)\r\n            })\r\n            //创建Index的排列顺序\r\n            const order = ['#', 'hot', ...alphabet]\r\n            // console.log(order)\r\n            return order.indexOf(first) - order.indexOf(next)\r\n          })\r\n          .map((k) => {\r\n            var m = []\r\n            for (var i = 0; i < aList[k].length; i++) {\r\n              m.push(aList[k][i])\r\n            }\r\n            return (\r\n              <IndexBar.Panel\r\n                index={k === 'hot' ? '热' : k}\r\n                title={\r\n                  k === '#' ? '当前城市' : k === 'hot' ? '热门城市' : k.toUpperCase()\r\n                  \r\n                }\r\n                key={k}\r\n                className='city'\r\n              >\r\n                <AList>\r\n                  {m.map((list, index) => {\r\n                    return (\r\n                      <AList.Item\r\n                        key={index}\r\n                        clickable={true}\r\n                        arrow={false}\r\n                        onClick={() => {\r\n                          changeCity(list)\r\n                        }}\r\n                        className='cityItem'\r\n                      >\r\n                        {list.label}\r\n                      </AList.Item>\r\n                    )\r\n                  })}\r\n                </AList>\r\n              </IndexBar.Panel>\r\n            )\r\n          })}\r\n      </IndexBar>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}