{"ast":null,"code":"import { useMemo } from 'react';\nimport memoize from 'lodash/memoize';\nexport function useCascaderValueExtend(options) {\n  const generateItems = useMemo(() => {\n    return memoize(val => {\n      const ret = [];\n      let currentOptions = options;\n      for (const v of val) {\n        const target = currentOptions.find(option => option.value === v);\n        if (!target) {\n          break;\n        }\n        ret.push(target);\n        if (!target.children) break;\n        currentOptions = target.children;\n      }\n      return ret;\n    }, val => JSON.stringify(val));\n  }, [options]);\n  const generateIsLeaf = useMemo(() => {\n    return memoize(val => {\n      const children = val.reduce((currentOptions, v) => {\n        var _a;\n        return ((_a = currentOptions.find(option => option.value === v)) === null || _a === void 0 ? void 0 : _a.children) || [];\n      }, options);\n      return children.length === 0;\n    }, val => JSON.stringify(val));\n  }, [options]);\n  function generateValueExtend(val) {\n    return {\n      get items() {\n        return generateItems(val);\n      },\n      get isLeaf() {\n        return generateIsLeaf(val);\n      }\n    };\n  }\n  return generateValueExtend;\n}","map":{"version":3,"names":["useMemo","memoize","useCascaderValueExtend","options","generateItems","val","ret","currentOptions","v","target","find","option","value","push","children","JSON","stringify","generateIsLeaf","reduce","_a","length","generateValueExtend","items","isLeaf"],"sources":["E:/Github/react_rent/react_rent/node_modules/antd-mobile/es/components/cascader-view/use-cascader-value-extend.js"],"sourcesContent":["import { useMemo } from 'react';\nimport memoize from 'lodash/memoize';\nexport function useCascaderValueExtend(options) {\n  const generateItems = useMemo(() => {\n    return memoize(val => {\n      const ret = [];\n      let currentOptions = options;\n      for (const v of val) {\n        const target = currentOptions.find(option => option.value === v);\n        if (!target) {\n          break;\n        }\n        ret.push(target);\n        if (!target.children) break;\n        currentOptions = target.children;\n      }\n      return ret;\n    }, val => JSON.stringify(val));\n  }, [options]);\n  const generateIsLeaf = useMemo(() => {\n    return memoize(val => {\n      const children = val.reduce((currentOptions, v) => {\n        var _a;\n        return ((_a = currentOptions.find(option => option.value === v)) === null || _a === void 0 ? void 0 : _a.children) || [];\n      }, options);\n      return children.length === 0;\n    }, val => JSON.stringify(val));\n  }, [options]);\n  function generateValueExtend(val) {\n    return {\n      get items() {\n        return generateItems(val);\n      },\n      get isLeaf() {\n        return generateIsLeaf(val);\n      }\n    };\n  }\n  return generateValueExtend;\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAO,SAASC,sBAAsB,CAACC,OAAO,EAAE;EAC9C,MAAMC,aAAa,GAAGJ,OAAO,CAAC,MAAM;IAClC,OAAOC,OAAO,CAACI,GAAG,IAAI;MACpB,MAAMC,GAAG,GAAG,EAAE;MACd,IAAIC,cAAc,GAAGJ,OAAO;MAC5B,KAAK,MAAMK,CAAC,IAAIH,GAAG,EAAE;QACnB,MAAMI,MAAM,GAAGF,cAAc,CAACG,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,KAAK,KAAKJ,CAAC,CAAC;QAChE,IAAI,CAACC,MAAM,EAAE;UACX;QACF;QACAH,GAAG,CAACO,IAAI,CAACJ,MAAM,CAAC;QAChB,IAAI,CAACA,MAAM,CAACK,QAAQ,EAAE;QACtBP,cAAc,GAAGE,MAAM,CAACK,QAAQ;MAClC;MACA,OAAOR,GAAG;IACZ,CAAC,EAAED,GAAG,IAAIU,IAAI,CAACC,SAAS,CAACX,GAAG,CAAC,CAAC;EAChC,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EACb,MAAMc,cAAc,GAAGjB,OAAO,CAAC,MAAM;IACnC,OAAOC,OAAO,CAACI,GAAG,IAAI;MACpB,MAAMS,QAAQ,GAAGT,GAAG,CAACa,MAAM,CAAC,CAACX,cAAc,EAAEC,CAAC,KAAK;QACjD,IAAIW,EAAE;QACN,OAAO,CAAC,CAACA,EAAE,GAAGZ,cAAc,CAACG,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,KAAK,KAAKJ,CAAC,CAAC,MAAM,IAAI,IAAIW,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACL,QAAQ,KAAK,EAAE;MAC1H,CAAC,EAAEX,OAAO,CAAC;MACX,OAAOW,QAAQ,CAACM,MAAM,KAAK,CAAC;IAC9B,CAAC,EAAEf,GAAG,IAAIU,IAAI,CAACC,SAAS,CAACX,GAAG,CAAC,CAAC;EAChC,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EACb,SAASkB,mBAAmB,CAAChB,GAAG,EAAE;IAChC,OAAO;MACL,IAAIiB,KAAK,GAAG;QACV,OAAOlB,aAAa,CAACC,GAAG,CAAC;MAC3B,CAAC;MACD,IAAIkB,MAAM,GAAG;QACX,OAAON,cAAc,CAACZ,GAAG,CAAC;MAC5B;IACF,CAAC;EACH;EACA,OAAOgB,mBAAmB;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}