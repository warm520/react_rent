{"ast":null,"code":"import { useTouch } from './use-touch';\nimport { useEffect } from 'react';\nimport { getScrollParent } from './get-scroll-parent';\nimport { supportsPassive } from './supports-passive';\nlet totalLockCount = 0;\nconst BODY_LOCK_CLASS = 'adm-overflow-hidden';\nfunction getScrollableElement(el) {\n  let current = el === null || el === void 0 ? void 0 : el.parentElement;\n  while (current) {\n    if (current.clientHeight < current.scrollHeight) {\n      return current;\n    }\n    current = current.parentElement;\n  }\n  return null;\n}\n// 移植自vant：https://github.com/youzan/vant/blob/HEAD/src/composables/use-lock-scroll.ts\nexport function useLockScroll(rootRef, shouldLock) {\n  const touch = useTouch();\n  const onTouchMove = event => {\n    touch.move(event);\n    const direction = touch.deltaY.current > 0 ? '10' : '01';\n    const el = getScrollParent(event.target, rootRef.current);\n    if (!el) return;\n    // This has perf cost but we have to compatible with iOS 12\n    if (shouldLock === 'strict') {\n      const scrollableParent = getScrollableElement(event.target);\n      if (scrollableParent === document.body || scrollableParent === document.documentElement) {\n        event.preventDefault();\n        return;\n      }\n    }\n    const {\n      scrollHeight,\n      offsetHeight,\n      scrollTop\n    } = el;\n    let status = '11';\n    if (scrollTop === 0) {\n      status = offsetHeight >= scrollHeight ? '00' : '01';\n    } else if (scrollTop + offsetHeight >= scrollHeight) {\n      status = '10';\n    }\n    if (status !== '11' && touch.isVertical() && !(parseInt(status, 2) & parseInt(direction, 2))) {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n  };\n  const lock = () => {\n    document.addEventListener('touchstart', touch.start);\n    document.addEventListener('touchmove', onTouchMove, supportsPassive ? {\n      passive: false\n    } : false);\n    if (!totalLockCount) {\n      document.body.classList.add(BODY_LOCK_CLASS);\n    }\n    totalLockCount++;\n  };\n  const unlock = () => {\n    if (totalLockCount) {\n      document.removeEventListener('touchstart', touch.start);\n      document.removeEventListener('touchmove', onTouchMove);\n      totalLockCount--;\n      if (!totalLockCount) {\n        document.body.classList.remove(BODY_LOCK_CLASS);\n      }\n    }\n  };\n  useEffect(() => {\n    if (shouldLock) {\n      lock();\n      return () => {\n        unlock();\n      };\n    }\n  }, [shouldLock]);\n}","map":{"version":3,"names":["useTouch","useEffect","getScrollParent","supportsPassive","totalLockCount","BODY_LOCK_CLASS","getScrollableElement","el","current","parentElement","clientHeight","scrollHeight","useLockScroll","rootRef","shouldLock","touch","onTouchMove","event","move","direction","deltaY","target","scrollableParent","document","body","documentElement","preventDefault","offsetHeight","scrollTop","status","isVertical","parseInt","cancelable","lock","addEventListener","start","passive","classList","add","unlock","removeEventListener","remove"],"sources":["E:/Github/react_rent/react_rent/node_modules/antd-mobile/es/utils/use-lock-scroll.js"],"sourcesContent":["import { useTouch } from './use-touch';\nimport { useEffect } from 'react';\nimport { getScrollParent } from './get-scroll-parent';\nimport { supportsPassive } from './supports-passive';\nlet totalLockCount = 0;\nconst BODY_LOCK_CLASS = 'adm-overflow-hidden';\nfunction getScrollableElement(el) {\n  let current = el === null || el === void 0 ? void 0 : el.parentElement;\n  while (current) {\n    if (current.clientHeight < current.scrollHeight) {\n      return current;\n    }\n    current = current.parentElement;\n  }\n  return null;\n}\n// 移植自vant：https://github.com/youzan/vant/blob/HEAD/src/composables/use-lock-scroll.ts\nexport function useLockScroll(rootRef, shouldLock) {\n  const touch = useTouch();\n  const onTouchMove = event => {\n    touch.move(event);\n    const direction = touch.deltaY.current > 0 ? '10' : '01';\n    const el = getScrollParent(event.target, rootRef.current);\n    if (!el) return;\n    // This has perf cost but we have to compatible with iOS 12\n    if (shouldLock === 'strict') {\n      const scrollableParent = getScrollableElement(event.target);\n      if (scrollableParent === document.body || scrollableParent === document.documentElement) {\n        event.preventDefault();\n        return;\n      }\n    }\n    const {\n      scrollHeight,\n      offsetHeight,\n      scrollTop\n    } = el;\n    let status = '11';\n    if (scrollTop === 0) {\n      status = offsetHeight >= scrollHeight ? '00' : '01';\n    } else if (scrollTop + offsetHeight >= scrollHeight) {\n      status = '10';\n    }\n    if (status !== '11' && touch.isVertical() && !(parseInt(status, 2) & parseInt(direction, 2))) {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n  };\n  const lock = () => {\n    document.addEventListener('touchstart', touch.start);\n    document.addEventListener('touchmove', onTouchMove, supportsPassive ? {\n      passive: false\n    } : false);\n    if (!totalLockCount) {\n      document.body.classList.add(BODY_LOCK_CLASS);\n    }\n    totalLockCount++;\n  };\n  const unlock = () => {\n    if (totalLockCount) {\n      document.removeEventListener('touchstart', touch.start);\n      document.removeEventListener('touchmove', onTouchMove);\n      totalLockCount--;\n      if (!totalLockCount) {\n        document.body.classList.remove(BODY_LOCK_CLASS);\n      }\n    }\n  };\n  useEffect(() => {\n    if (shouldLock) {\n      lock();\n      return () => {\n        unlock();\n      };\n    }\n  }, [shouldLock]);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}