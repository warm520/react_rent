{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { axiosAPI as axios } from './axios.js';\nconst TOKEN_NAME = 'hkzf_city';\nconst getCurrentCity = () => {\n  // 获取本地存储的城市\n  const localCity = JSON.parse(localStorage.getItem(TOKEN_NAME));\n  if (!localCity) {\n    return new Promise((resolve, reject) => {\n      // 本地存储信息不存在时通过定位获取城市信息\n      const currentCity = new window.BMapGL.LocalCity();\n      currentCity.get(async res => {\n        try {\n          const result = await axios.get(`/area/info?name=${res.name}`);\n          localStorage.setItem(TOKEN_NAME, JSON.stringify(result.data.body));\n          resolve(result.data.body);\n        } catch (e) {\n          reject(e);\n        }\n      });\n      // currentCity.get()\n    });\n  } else {\n    return Promise.resolve(localCity);\n  }\n};\n// 自定义获取当前城市的hook\nconst useCity = () => {\n  _s();\n  // 设置当前城市的id和名字\n  const [label, setLabel] = useState(''); //名字\n  const [value, setValue] = useState(''); //id\n  // 挂载时获取当前的城市\n  useEffect(() => {\n    const getCity = async () => {\n      const res = await getCurrentCity();\n      console.log(res.value);\n\n      // setValue(res.value)\n      // setLabel(res.label)\n    };\n\n    getCity();\n  }, []);\n  return [value, label];\n};\n_s(useCity, \"RxC4ASZzkKN++ZpT9jlgKip8oBg=\");\nconst getCity = () => {\n  JSON.parse(localStorage.getItem(TOKEN_NAME));\n};\nconst setCity = value => {\n  localStorage.setItem(TOKEN_NAME, value);\n};\nexport { getCurrentCity, useCity, getCity, setCity };","map":{"version":3,"names":["useState","useEffect","axiosAPI","axios","TOKEN_NAME","getCurrentCity","localCity","JSON","parse","localStorage","getItem","Promise","resolve","reject","currentCity","window","BMapGL","LocalCity","get","res","result","name","setItem","stringify","data","body","e","useCity","label","setLabel","value","setValue","getCity","console","log","setCity"],"sources":["E:/Github/react_rent/react_rent/src/utils/city.js"],"sourcesContent":["import {useState,useEffect} from 'react'\r\nimport {axiosAPI as axios} from './axios.js'\r\n\r\nconst TOKEN_NAME = 'hkzf_city'\r\n\r\n\r\nconst getCurrentCity = ()=>{\r\n  // 获取本地存储的城市\r\n  const localCity = JSON.parse(localStorage.getItem(TOKEN_NAME))\r\n  if(!localCity){\r\n    return new Promise((resolve,reject)=>{\r\n      // 本地存储信息不存在时通过定位获取城市信息\r\n      const currentCity = new window.BMapGL.LocalCity();\r\n      currentCity.get(async (res)=>{\r\n        try{\r\n          const result = await axios.get(`/area/info?name=${res.name}`)\r\n          localStorage.setItem(TOKEN_NAME,JSON.stringify(result.data.body))\r\n          resolve(result.data.body)\r\n        }catch(e){\r\n          reject(e)\r\n        }\r\n      })\r\n      // currentCity.get()\r\n    })\r\n  }else{\r\n    return Promise.resolve(localCity)\r\n  }\r\n}\r\n// 自定义获取当前城市的hook\r\nconst useCity = ()=>{\r\n  // 设置当前城市的id和名字\r\n  const [label,setLabel] = useState('') //名字\r\n  const [value,setValue] = useState('') //id\r\n  // 挂载时获取当前的城市\r\n  useEffect(()=>{\r\n    const getCity = async ()=>{\r\n      const res = await getCurrentCity()\r\n      console.log(res.value)\r\n      \r\n      // setValue(res.value)\r\n      // setLabel(res.label)\r\n    }\r\n    getCity()\r\n  },[])\r\n  return [value,label]\r\n}\r\n\r\nconst getCity = ()=>{JSON.parse(localStorage.getItem(TOKEN_NAME))}\r\n\r\nconst setCity = (value)=>{localStorage.setItem(TOKEN_NAME,value)}\r\n\r\nexport {getCurrentCity,useCity,getCity,setCity}"],"mappings":";AAAA,SAAQA,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,SAAQC,QAAQ,IAAIC,KAAK,QAAO,YAAY;AAE5C,MAAMC,UAAU,GAAG,WAAW;AAG9B,MAAMC,cAAc,GAAG,MAAI;EACzB;EACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACN,UAAU,CAAC,CAAC;EAC9D,IAAG,CAACE,SAAS,EAAC;IACZ,OAAO,IAAIK,OAAO,CAAC,CAACC,OAAO,EAACC,MAAM,KAAG;MACnC;MACA,MAAMC,WAAW,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,SAAS,EAAE;MACjDH,WAAW,CAACI,GAAG,CAAC,MAAOC,GAAG,IAAG;QAC3B,IAAG;UACD,MAAMC,MAAM,GAAG,MAAMjB,KAAK,CAACe,GAAG,CAAE,mBAAkBC,GAAG,CAACE,IAAK,EAAC,CAAC;UAC7DZ,YAAY,CAACa,OAAO,CAAClB,UAAU,EAACG,IAAI,CAACgB,SAAS,CAACH,MAAM,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC;UACjEb,OAAO,CAACQ,MAAM,CAACI,IAAI,CAACC,IAAI,CAAC;QAC3B,CAAC,QAAMC,CAAC,EAAC;UACPb,MAAM,CAACa,CAAC,CAAC;QACX;MACF,CAAC,CAAC;MACF;IACF,CAAC,CAAC;EACJ,CAAC,MAAI;IACH,OAAOf,OAAO,CAACC,OAAO,CAACN,SAAS,CAAC;EACnC;AACF,CAAC;AACD;AACA,MAAMqB,OAAO,GAAG,MAAI;EAAA;EAClB;EACA,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC,EAAC;EACtC,MAAM,CAAC8B,KAAK,EAACC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC,EAAC;EACtC;EACAC,SAAS,CAAC,MAAI;IACZ,MAAM+B,OAAO,GAAG,YAAU;MACxB,MAAMb,GAAG,GAAG,MAAMd,cAAc,EAAE;MAClC4B,OAAO,CAACC,GAAG,CAACf,GAAG,CAACW,KAAK,CAAC;;MAEtB;MACA;IACF,CAAC;;IACDE,OAAO,EAAE;EACX,CAAC,EAAC,EAAE,CAAC;EACL,OAAO,CAACF,KAAK,EAACF,KAAK,CAAC;AACtB,CAAC;AAAA,GAhBKD,OAAO;AAkBb,MAAMK,OAAO,GAAG,MAAI;EAACzB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACN,UAAU,CAAC,CAAC;AAAA,CAAC;AAElE,MAAM+B,OAAO,GAAIL,KAAK,IAAG;EAACrB,YAAY,CAACa,OAAO,CAAClB,UAAU,EAAC0B,KAAK,CAAC;AAAA,CAAC;AAEjE,SAAQzB,cAAc,EAACsB,OAAO,EAACK,OAAO,EAACG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}