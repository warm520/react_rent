{"ast":null,"code":"import React, { useLayoutEffect, useMemo } from 'react';\nimport { CloseOutline } from 'antd-mobile-icons';\nimport classNames from 'classnames';\nimport Image from '../image';\nimport SpinLoading from '../spin-loading';\nimport { useConfig } from '../config-provider';\nconst classPrefix = `adm-image-uploader`;\nconst PreviewItem = props => {\n  const {\n    locale\n  } = useConfig();\n  const {\n    url,\n    file,\n    deletable,\n    onDelete,\n    imageFit\n  } = props;\n  const src = useMemo(() => {\n    if (url) {\n      return url;\n    }\n    if (file) {\n      return URL.createObjectURL(file);\n    }\n    return '';\n  }, [url, file]);\n  useLayoutEffect(() => {\n    return () => {\n      URL.revokeObjectURL(src);\n    };\n  }, [src]);\n  function renderLoading() {\n    return props.status === 'pending' && React.createElement(\"div\", {\n      className: `${classPrefix}-cell-mask`\n    }, React.createElement(\"span\", {\n      className: `${classPrefix}-cell-loading`\n    }, React.createElement(SpinLoading, {\n      color: 'white'\n    }), React.createElement(\"span\", {\n      className: `${classPrefix}-cell-mask-message`\n    }, locale.ImageUploader.uploading)));\n  }\n  function renderDelete() {\n    return deletable && React.createElement(\"span\", {\n      className: `${classPrefix}-cell-delete`,\n      onClick: onDelete\n    }, React.createElement(CloseOutline, {\n      className: `${classPrefix}-cell-delete-icon`\n    }));\n  }\n  return React.createElement(\"div\", {\n    className: classNames(`${classPrefix}-cell`, props.status === 'fail' && `${classPrefix}-cell-fail`)\n  }, React.createElement(Image, {\n    className: `${classPrefix}-cell-image`,\n    src: src,\n    fit: imageFit,\n    onClick: props.onClick\n  }), renderLoading(), renderDelete());\n};\nexport default PreviewItem;","map":{"version":3,"names":["React","useLayoutEffect","useMemo","CloseOutline","classNames","Image","SpinLoading","useConfig","classPrefix","PreviewItem","props","locale","url","file","deletable","onDelete","imageFit","src","URL","createObjectURL","revokeObjectURL","renderLoading","status","createElement","className","color","ImageUploader","uploading","renderDelete","onClick","fit"],"sources":["E:/Github/react_rent/react_rent/node_modules/antd-mobile/es/components/image-uploader/preview-item.js"],"sourcesContent":["import React, { useLayoutEffect, useMemo } from 'react';\nimport { CloseOutline } from 'antd-mobile-icons';\nimport classNames from 'classnames';\nimport Image from '../image';\nimport SpinLoading from '../spin-loading';\nimport { useConfig } from '../config-provider';\nconst classPrefix = `adm-image-uploader`;\nconst PreviewItem = props => {\n  const {\n    locale\n  } = useConfig();\n  const {\n    url,\n    file,\n    deletable,\n    onDelete,\n    imageFit\n  } = props;\n  const src = useMemo(() => {\n    if (url) {\n      return url;\n    }\n    if (file) {\n      return URL.createObjectURL(file);\n    }\n    return '';\n  }, [url, file]);\n  useLayoutEffect(() => {\n    return () => {\n      URL.revokeObjectURL(src);\n    };\n  }, [src]);\n  function renderLoading() {\n    return props.status === 'pending' && React.createElement(\"div\", {\n      className: `${classPrefix}-cell-mask`\n    }, React.createElement(\"span\", {\n      className: `${classPrefix}-cell-loading`\n    }, React.createElement(SpinLoading, {\n      color: 'white'\n    }), React.createElement(\"span\", {\n      className: `${classPrefix}-cell-mask-message`\n    }, locale.ImageUploader.uploading)));\n  }\n  function renderDelete() {\n    return deletable && React.createElement(\"span\", {\n      className: `${classPrefix}-cell-delete`,\n      onClick: onDelete\n    }, React.createElement(CloseOutline, {\n      className: `${classPrefix}-cell-delete-icon`\n    }));\n  }\n  return React.createElement(\"div\", {\n    className: classNames(`${classPrefix}-cell`, props.status === 'fail' && `${classPrefix}-cell-fail`)\n  }, React.createElement(Image, {\n    className: `${classPrefix}-cell-image`,\n    src: src,\n    fit: imageFit,\n    onClick: props.onClick\n  }), renderLoading(), renderDelete());\n};\nexport default PreviewItem;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AACvD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,WAAW,MAAM,iBAAiB;AACzC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,MAAMC,WAAW,GAAI,oBAAmB;AACxC,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAC3B,MAAM;IACJC;EACF,CAAC,GAAGJ,SAAS,EAAE;EACf,MAAM;IACJK,GAAG;IACHC,IAAI;IACJC,SAAS;IACTC,QAAQ;IACRC;EACF,CAAC,GAAGN,KAAK;EACT,MAAMO,GAAG,GAAGf,OAAO,CAAC,MAAM;IACxB,IAAIU,GAAG,EAAE;MACP,OAAOA,GAAG;IACZ;IACA,IAAIC,IAAI,EAAE;MACR,OAAOK,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;IAClC;IACA,OAAO,EAAE;EACX,CAAC,EAAE,CAACD,GAAG,EAAEC,IAAI,CAAC,CAAC;EACfZ,eAAe,CAAC,MAAM;IACpB,OAAO,MAAM;MACXiB,GAAG,CAACE,eAAe,CAACH,GAAG,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EACT,SAASI,aAAa,GAAG;IACvB,OAAOX,KAAK,CAACY,MAAM,KAAK,SAAS,IAAItB,KAAK,CAACuB,aAAa,CAAC,KAAK,EAAE;MAC9DC,SAAS,EAAG,GAAEhB,WAAY;IAC5B,CAAC,EAAER,KAAK,CAACuB,aAAa,CAAC,MAAM,EAAE;MAC7BC,SAAS,EAAG,GAAEhB,WAAY;IAC5B,CAAC,EAAER,KAAK,CAACuB,aAAa,CAACjB,WAAW,EAAE;MAClCmB,KAAK,EAAE;IACT,CAAC,CAAC,EAAEzB,KAAK,CAACuB,aAAa,CAAC,MAAM,EAAE;MAC9BC,SAAS,EAAG,GAAEhB,WAAY;IAC5B,CAAC,EAAEG,MAAM,CAACe,aAAa,CAACC,SAAS,CAAC,CAAC,CAAC;EACtC;EACA,SAASC,YAAY,GAAG;IACtB,OAAOd,SAAS,IAAId,KAAK,CAACuB,aAAa,CAAC,MAAM,EAAE;MAC9CC,SAAS,EAAG,GAAEhB,WAAY,cAAa;MACvCqB,OAAO,EAAEd;IACX,CAAC,EAAEf,KAAK,CAACuB,aAAa,CAACpB,YAAY,EAAE;MACnCqB,SAAS,EAAG,GAAEhB,WAAY;IAC5B,CAAC,CAAC,CAAC;EACL;EACA,OAAOR,KAAK,CAACuB,aAAa,CAAC,KAAK,EAAE;IAChCC,SAAS,EAAEpB,UAAU,CAAE,GAAEI,WAAY,OAAM,EAAEE,KAAK,CAACY,MAAM,KAAK,MAAM,IAAK,GAAEd,WAAY,YAAW;EACpG,CAAC,EAAER,KAAK,CAACuB,aAAa,CAAClB,KAAK,EAAE;IAC5BmB,SAAS,EAAG,GAAEhB,WAAY,aAAY;IACtCS,GAAG,EAAEA,GAAG;IACRa,GAAG,EAAEd,QAAQ;IACba,OAAO,EAAEnB,KAAK,CAACmB;EACjB,CAAC,CAAC,EAAER,aAAa,EAAE,EAAEO,YAAY,EAAE,CAAC;AACtC,CAAC;AACD,eAAenB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}