{"ast":null,"code":"import { bound } from './bound';\nexport function rubberband(distance, dimension, constant) {\n  return distance * dimension * constant / (dimension + constant * distance);\n}\nexport function rubberbandIfOutOfBounds(position, min, max, dimension) {\n  let constant = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.15;\n  if (constant === 0) return bound(position, min, max);\n  if (position < min) return -rubberband(min - position, dimension, constant) + min;\n  if (position > max) return +rubberband(position - max, dimension, constant) + max;\n  return position;\n}","map":{"version":3,"names":["bound","rubberband","distance","dimension","constant","rubberbandIfOutOfBounds","position","min","max"],"sources":["E:/Github/react_rent/react_rent/node_modules/antd-mobile/es/utils/rubberband.js"],"sourcesContent":["import { bound } from './bound';\nexport function rubberband(distance, dimension, constant) {\n  return distance * dimension * constant / (dimension + constant * distance);\n}\nexport function rubberbandIfOutOfBounds(position, min, max, dimension, constant = 0.15) {\n  if (constant === 0) return bound(position, min, max);\n  if (position < min) return -rubberband(min - position, dimension, constant) + min;\n  if (position > max) return +rubberband(position - max, dimension, constant) + max;\n  return position;\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,SAAS;AAC/B,OAAO,SAASC,UAAU,CAACC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EACxD,OAAOF,QAAQ,GAAGC,SAAS,GAAGC,QAAQ,IAAID,SAAS,GAAGC,QAAQ,GAAGF,QAAQ,CAAC;AAC5E;AACA,OAAO,SAASG,uBAAuB,CAACC,QAAQ,EAAEC,GAAG,EAAEC,GAAG,EAAEL,SAAS,EAAmB;EAAA,IAAjBC,QAAQ,uEAAG,IAAI;EACpF,IAAIA,QAAQ,KAAK,CAAC,EAAE,OAAOJ,KAAK,CAACM,QAAQ,EAAEC,GAAG,EAAEC,GAAG,CAAC;EACpD,IAAIF,QAAQ,GAAGC,GAAG,EAAE,OAAO,CAACN,UAAU,CAACM,GAAG,GAAGD,QAAQ,EAAEH,SAAS,EAAEC,QAAQ,CAAC,GAAGG,GAAG;EACjF,IAAID,QAAQ,GAAGE,GAAG,EAAE,OAAO,CAACP,UAAU,CAACK,QAAQ,GAAGE,GAAG,EAAEL,SAAS,EAAEC,QAAQ,CAAC,GAAGI,GAAG;EACjF,OAAOF,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}