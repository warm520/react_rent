{"ast":null,"code":"import React, { useCallback, useMemo } from 'react';\nimport PickerView from '../picker-view';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { generateDatePickerColumns, convertDateToStringArray, convertStringArrayToDate, defaultRenderLabel } from '../date-picker/date-picker-utils';\nconst thisYear = new Date().getFullYear();\nconst defaultProps = {\n  min: new Date(new Date().setFullYear(thisYear - 10)),\n  max: new Date(new Date().setFullYear(thisYear + 10)),\n  precision: 'day',\n  renderLabel: defaultRenderLabel\n};\nexport const DatePickerView = p => {\n  var _a;\n  const props = mergeProps(defaultProps, p);\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: (_a = props.defaultValue) !== null && _a !== void 0 ? _a : null\n  });\n  const pickerValue = useMemo(() => convertDateToStringArray(value, props.precision), [value, props.precision]);\n  const onChange = useCallback(val => {\n    var _a;\n    const date = convertStringArrayToDate(val, props.precision);\n    if (date) {\n      setValue(date);\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, date);\n    }\n  }, [props.onChange, props.precision]);\n  return withNativeProps(props, React.createElement(PickerView, {\n    columns: selected => generateDatePickerColumns(selected, props.min, props.max, props.precision, props.renderLabel, props.filter),\n    loading: props.loading,\n    loadingContent: props.loadingContent,\n    value: pickerValue,\n    mouseWheel: props.mouseWheel,\n    onChange: onChange\n  }));\n};","map":{"version":3,"names":["React","useCallback","useMemo","PickerView","withNativeProps","mergeProps","usePropsValue","generateDatePickerColumns","convertDateToStringArray","convertStringArrayToDate","defaultRenderLabel","thisYear","Date","getFullYear","defaultProps","min","setFullYear","max","precision","renderLabel","DatePickerView","p","_a","props","value","setValue","defaultValue","pickerValue","onChange","val","date","call","createElement","columns","selected","filter","loading","loadingContent","mouseWheel"],"sources":["E:/Github/react_rent/react_rent/node_modules/antd-mobile/es/components/date-picker-view/date-picker-view.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport PickerView from '../picker-view';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { generateDatePickerColumns, convertDateToStringArray, convertStringArrayToDate, defaultRenderLabel } from '../date-picker/date-picker-utils';\nconst thisYear = new Date().getFullYear();\nconst defaultProps = {\n  min: new Date(new Date().setFullYear(thisYear - 10)),\n  max: new Date(new Date().setFullYear(thisYear + 10)),\n  precision: 'day',\n  renderLabel: defaultRenderLabel\n};\nexport const DatePickerView = p => {\n  var _a;\n  const props = mergeProps(defaultProps, p);\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: (_a = props.defaultValue) !== null && _a !== void 0 ? _a : null\n  });\n  const pickerValue = useMemo(() => convertDateToStringArray(value, props.precision), [value, props.precision]);\n  const onChange = useCallback(val => {\n    var _a;\n    const date = convertStringArrayToDate(val, props.precision);\n    if (date) {\n      setValue(date);\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, date);\n    }\n  }, [props.onChange, props.precision]);\n  return withNativeProps(props, React.createElement(PickerView, {\n    columns: selected => generateDatePickerColumns(selected, props.min, props.max, props.precision, props.renderLabel, props.filter),\n    loading: props.loading,\n    loadingContent: props.loadingContent,\n    value: pickerValue,\n    mouseWheel: props.mouseWheel,\n    onChange: onChange\n  }));\n};"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AACnD,OAAOC,UAAU,MAAM,gBAAgB;AACvC,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,yBAAyB,EAAEC,wBAAwB,EAAEC,wBAAwB,EAAEC,kBAAkB,QAAQ,kCAAkC;AACpJ,MAAMC,QAAQ,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;AACzC,MAAMC,YAAY,GAAG;EACnBC,GAAG,EAAE,IAAIH,IAAI,CAAC,IAAIA,IAAI,EAAE,CAACI,WAAW,CAACL,QAAQ,GAAG,EAAE,CAAC,CAAC;EACpDM,GAAG,EAAE,IAAIL,IAAI,CAAC,IAAIA,IAAI,EAAE,CAACI,WAAW,CAACL,QAAQ,GAAG,EAAE,CAAC,CAAC;EACpDO,SAAS,EAAE,KAAK;EAChBC,WAAW,EAAET;AACf,CAAC;AACD,OAAO,MAAMU,cAAc,GAAGC,CAAC,IAAI;EACjC,IAAIC,EAAE;EACN,MAAMC,KAAK,GAAGlB,UAAU,CAACS,YAAY,EAAEO,CAAC,CAAC;EACzC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,aAAa,CAAC;IACtCkB,KAAK,EAAED,KAAK,CAACC,KAAK;IAClBE,YAAY,EAAE,CAACJ,EAAE,GAAGC,KAAK,CAACG,YAAY,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG;EAC3E,CAAC,CAAC;EACF,MAAMK,WAAW,GAAGzB,OAAO,CAAC,MAAMM,wBAAwB,CAACgB,KAAK,EAAED,KAAK,CAACL,SAAS,CAAC,EAAE,CAACM,KAAK,EAAED,KAAK,CAACL,SAAS,CAAC,CAAC;EAC7G,MAAMU,QAAQ,GAAG3B,WAAW,CAAC4B,GAAG,IAAI;IAClC,IAAIP,EAAE;IACN,MAAMQ,IAAI,GAAGrB,wBAAwB,CAACoB,GAAG,EAAEN,KAAK,CAACL,SAAS,CAAC;IAC3D,IAAIY,IAAI,EAAE;MACRL,QAAQ,CAACK,IAAI,CAAC;MACd,CAACR,EAAE,GAAGC,KAAK,CAACK,QAAQ,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACS,IAAI,CAACR,KAAK,EAAEO,IAAI,CAAC;IACjF;EACF,CAAC,EAAE,CAACP,KAAK,CAACK,QAAQ,EAAEL,KAAK,CAACL,SAAS,CAAC,CAAC;EACrC,OAAOd,eAAe,CAACmB,KAAK,EAAEvB,KAAK,CAACgC,aAAa,CAAC7B,UAAU,EAAE;IAC5D8B,OAAO,EAAEC,QAAQ,IAAI3B,yBAAyB,CAAC2B,QAAQ,EAAEX,KAAK,CAACR,GAAG,EAAEQ,KAAK,CAACN,GAAG,EAAEM,KAAK,CAACL,SAAS,EAAEK,KAAK,CAACJ,WAAW,EAAEI,KAAK,CAACY,MAAM,CAAC;IAChIC,OAAO,EAAEb,KAAK,CAACa,OAAO;IACtBC,cAAc,EAAEd,KAAK,CAACc,cAAc;IACpCb,KAAK,EAAEG,WAAW;IAClBW,UAAU,EAAEf,KAAK,CAACe,UAAU;IAC5BV,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}