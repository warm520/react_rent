{"ast":null,"code":"export function mergeLocale(base, patch) {\n  function merge(a, b) {\n    if (typeof a !== 'object' || typeof b !== 'object' || Array.isArray(a) || Array.isArray(b)) {\n      return b !== undefined ? b : a;\n    }\n    const result = {};\n    for (const key in a) {\n      if (a.hasOwnProperty(key)) {\n        result[key] = merge(a[key], b[key]);\n      }\n    }\n    return result;\n  }\n  return merge(base, patch);\n}","map":{"version":3,"names":["mergeLocale","base","patch","merge","a","b","Array","isArray","undefined","result","key","hasOwnProperty"],"sources":["E:/Github/react_rent/react_rent/node_modules/antd-mobile/es/utils/merge-locale.js"],"sourcesContent":["export function mergeLocale(base, patch) {\n  function merge(a, b) {\n    if (typeof a !== 'object' || typeof b !== 'object' || Array.isArray(a) || Array.isArray(b)) {\n      return b !== undefined ? b : a;\n    }\n    const result = {};\n    for (const key in a) {\n      if (a.hasOwnProperty(key)) {\n        result[key] = merge(a[key], b[key]);\n      }\n    }\n    return result;\n  }\n  return merge(base, patch);\n}"],"mappings":"AAAA,OAAO,SAASA,WAAW,CAACC,IAAI,EAAEC,KAAK,EAAE;EACvC,SAASC,KAAK,CAACC,CAAC,EAAEC,CAAC,EAAE;IACnB,IAAI,OAAOD,CAAC,KAAK,QAAQ,IAAI,OAAOC,CAAC,KAAK,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACH,CAAC,CAAC,IAAIE,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,EAAE;MAC1F,OAAOA,CAAC,KAAKG,SAAS,GAAGH,CAAC,GAAGD,CAAC;IAChC;IACA,MAAMK,MAAM,GAAG,CAAC,CAAC;IACjB,KAAK,MAAMC,GAAG,IAAIN,CAAC,EAAE;MACnB,IAAIA,CAAC,CAACO,cAAc,CAACD,GAAG,CAAC,EAAE;QACzBD,MAAM,CAACC,GAAG,CAAC,GAAGP,KAAK,CAACC,CAAC,CAACM,GAAG,CAAC,EAAEL,CAAC,CAACK,GAAG,CAAC,CAAC;MACrC;IACF;IACA,OAAOD,MAAM;EACf;EACA,OAAON,KAAK,CAACF,IAAI,EAAEC,KAAK,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}