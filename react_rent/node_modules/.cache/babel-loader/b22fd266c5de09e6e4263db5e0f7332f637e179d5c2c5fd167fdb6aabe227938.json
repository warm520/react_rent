{"ast":null,"code":"import classNames from 'classnames';\nimport React from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Space from '../space';\nimport Grid from '../grid';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { CheckMark } from './check-mark';\nconst classPrefix = `adm-selector`;\nconst defaultProps = {\n  multiple: false,\n  defaultValue: [],\n  showCheckMark: true\n};\nexport const Selector = p => {\n  const props = mergeProps(defaultProps, p);\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue,\n    onChange: val => {\n      var _a;\n      const extend = {\n        get items() {\n          return props.options.filter(option => val.includes(option.value));\n        }\n      };\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, val, extend);\n    }\n  });\n  const items = props.options.map(option => {\n    const active = (value || []).includes(option.value);\n    const disabled = option.disabled || props.disabled;\n    const itemCls = classNames(`${classPrefix}-item`, {\n      [`${classPrefix}-item-active`]: active && !props.multiple,\n      [`${classPrefix}-item-multiple-active`]: active && props.multiple,\n      [`${classPrefix}-item-disabled`]: disabled\n    });\n    return React.createElement(\"div\", {\n      key: option.value,\n      className: itemCls,\n      onClick: () => {\n        if (disabled) {\n          return;\n        }\n        if (props.multiple) {\n          const val = active ? value.filter(v => v !== option.value) : [...value, option.value];\n          setValue(val);\n        } else {\n          const val = active ? [] : [option.value];\n          setValue(val);\n        }\n      }\n    }, option.label, option.description && React.createElement(\"div\", {\n      className: `${classPrefix}-item-description`\n    }, option.description), active && props.showCheckMark && React.createElement(\"div\", {\n      className: `${classPrefix}-check-mark-wrapper`\n    }, React.createElement(CheckMark, null)));\n  });\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, !props.columns && React.createElement(Space, {\n    wrap: true\n  }, items), props.columns && React.createElement(Grid, {\n    columns: props.columns\n  }, items)));\n};","map":{"version":3,"names":["classNames","React","withNativeProps","mergeProps","Space","Grid","usePropsValue","CheckMark","classPrefix","defaultProps","multiple","defaultValue","showCheckMark","Selector","p","props","value","setValue","onChange","val","_a","extend","items","options","filter","option","includes","call","map","active","disabled","itemCls","createElement","key","className","onClick","v","label","description","columns","wrap"],"sources":["E:/Github/react_rent/react_rent/node_modules/antd-mobile/es/components/selector/selector.js"],"sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Space from '../space';\nimport Grid from '../grid';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { CheckMark } from './check-mark';\nconst classPrefix = `adm-selector`;\nconst defaultProps = {\n  multiple: false,\n  defaultValue: [],\n  showCheckMark: true\n};\nexport const Selector = p => {\n  const props = mergeProps(defaultProps, p);\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue,\n    onChange: val => {\n      var _a;\n      const extend = {\n        get items() {\n          return props.options.filter(option => val.includes(option.value));\n        }\n      };\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, val, extend);\n    }\n  });\n  const items = props.options.map(option => {\n    const active = (value || []).includes(option.value);\n    const disabled = option.disabled || props.disabled;\n    const itemCls = classNames(`${classPrefix}-item`, {\n      [`${classPrefix}-item-active`]: active && !props.multiple,\n      [`${classPrefix}-item-multiple-active`]: active && props.multiple,\n      [`${classPrefix}-item-disabled`]: disabled\n    });\n    return React.createElement(\"div\", {\n      key: option.value,\n      className: itemCls,\n      onClick: () => {\n        if (disabled) {\n          return;\n        }\n        if (props.multiple) {\n          const val = active ? value.filter(v => v !== option.value) : [...value, option.value];\n          setValue(val);\n        } else {\n          const val = active ? [] : [option.value];\n          setValue(val);\n        }\n      }\n    }, option.label, option.description && React.createElement(\"div\", {\n      className: `${classPrefix}-item-description`\n    }, option.description), active && props.showCheckMark && React.createElement(\"div\", {\n      className: `${classPrefix}-check-mark-wrapper`\n    }, React.createElement(CheckMark, null)));\n  });\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, !props.columns && React.createElement(Space, {\n    wrap: true\n  }, items), props.columns && React.createElement(Grid, {\n    columns: props.columns\n  }, items)));\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}