{"ast":null,"code":"import dayjs from 'dayjs';\nimport isoWeek from 'dayjs/plugin/isoWeek';\nimport isoWeeksInYear from 'dayjs/plugin/isoWeeksInYear';\nimport isLeapYear from 'dayjs/plugin/isLeapYear';\ndayjs.extend(isoWeek);\ndayjs.extend(isoWeeksInYear);\ndayjs.extend(isLeapYear);\nconst precisionRankRecord = {\n  year: 0,\n  week: 1,\n  'week-day': 2\n};\nexport function defaultRenderLabel(type, data) {\n  return data.toString();\n}\nexport function generateDatePickerColumns(selected, min, max, precision, renderLabel, filter) {\n  const ret = [];\n  const minYear = min.getFullYear();\n  const maxYear = max.getFullYear();\n  const rank = precisionRankRecord[precision];\n  const selectedYear = parseInt(selected[0]);\n  const isInMinYear = selectedYear === minYear;\n  const isInMaxYear = selectedYear === maxYear;\n  const minDay = dayjs(min);\n  const maxDay = dayjs(max);\n  const minWeek = minDay.isoWeek();\n  const maxWeek = maxDay.isoWeek();\n  const minWeekday = minDay.isoWeekday();\n  const maxWeekday = maxDay.isoWeekday();\n  const selectedWeek = parseInt(selected[1]);\n  const isInMinWeek = isInMinYear && selectedWeek === minWeek;\n  const isInMaxWeek = isInMaxYear && selectedWeek === maxWeek;\n  const selectedYearWeeks = dayjs(`${selectedYear}-01-01`).isoWeeksInYear();\n  const generateColumn = (from, to, precision) => {\n    let column = [];\n    for (let i = from; i <= to; i++) {\n      column.push(i);\n    }\n    const prefix = selected.slice(0, precisionRankRecord[precision]);\n    const currentFilter = filter === null || filter === void 0 ? void 0 : filter[precision];\n    if (currentFilter && typeof currentFilter === 'function') {\n      column = column.filter(i => currentFilter(i, {\n        get date() {\n          const stringArray = [...prefix, i.toString()];\n          return convertStringArrayToDate(stringArray);\n        }\n      }));\n    }\n    return column;\n  };\n  if (rank >= precisionRankRecord.year) {\n    const lower = minYear;\n    const upper = maxYear;\n    const years = generateColumn(lower, upper, 'year');\n    ret.push(years.map(v => {\n      return {\n        label: renderLabel('year', v),\n        value: v.toString()\n      };\n    }));\n  }\n  if (rank >= precisionRankRecord.week) {\n    const lower = isInMinYear ? minWeek : 1;\n    const upper = isInMaxYear ? maxWeek : selectedYearWeeks;\n    const weeks = generateColumn(lower, upper, 'week');\n    ret.push(weeks.map(v => {\n      return {\n        label: renderLabel('week', v),\n        value: v.toString()\n      };\n    }));\n  }\n  if (rank >= precisionRankRecord['week-day']) {\n    const lower = isInMinWeek ? minWeekday : 1;\n    const upper = isInMaxWeek ? maxWeekday : 7;\n    const weeks = generateColumn(lower, upper, 'week-day');\n    ret.push(weeks.map(v => {\n      return {\n        label: renderLabel('week-day', v),\n        value: v.toString()\n      };\n    }));\n  }\n  return ret;\n}\nexport function convertDateToStringArray(date) {\n  if (!date) return [];\n  const day = dayjs(date);\n  return [day.isoWeekYear().toString(), day.isoWeek().toString(), day.isoWeekday().toString()];\n}\nexport function convertStringArrayToDate(value) {\n  var _a, _b, _c;\n  const yearString = (_a = value[0]) !== null && _a !== void 0 ? _a : '1900';\n  const weekString = (_b = value[1]) !== null && _b !== void 0 ? _b : '1';\n  const weekdayString = (_c = value[2]) !== null && _c !== void 0 ? _c : '1';\n  const day = dayjs().year(parseInt(yearString)).isoWeek(parseInt(weekString)).isoWeekday(parseInt(weekdayString)).hour(0).minute(0).second(0);\n  return day.toDate();\n}","map":{"version":3,"names":["dayjs","isoWeek","isoWeeksInYear","isLeapYear","extend","precisionRankRecord","year","week","defaultRenderLabel","type","data","toString","generateDatePickerColumns","selected","min","max","precision","renderLabel","filter","ret","minYear","getFullYear","maxYear","rank","selectedYear","parseInt","isInMinYear","isInMaxYear","minDay","maxDay","minWeek","maxWeek","minWeekday","isoWeekday","maxWeekday","selectedWeek","isInMinWeek","isInMaxWeek","selectedYearWeeks","generateColumn","from","to","column","i","push","prefix","slice","currentFilter","date","stringArray","convertStringArrayToDate","lower","upper","years","map","v","label","value","weeks","convertDateToStringArray","day","isoWeekYear","_a","_b","_c","yearString","weekString","weekdayString","hour","minute","second","toDate"],"sources":["E:/Github/react_rent/react_rent/node_modules/antd-mobile/es/components/date-picker/date-picker-week-utils.js"],"sourcesContent":["import dayjs from 'dayjs';\nimport isoWeek from 'dayjs/plugin/isoWeek';\nimport isoWeeksInYear from 'dayjs/plugin/isoWeeksInYear';\nimport isLeapYear from 'dayjs/plugin/isLeapYear';\ndayjs.extend(isoWeek);\ndayjs.extend(isoWeeksInYear);\ndayjs.extend(isLeapYear);\nconst precisionRankRecord = {\n  year: 0,\n  week: 1,\n  'week-day': 2\n};\nexport function defaultRenderLabel(type, data) {\n  return data.toString();\n}\nexport function generateDatePickerColumns(selected, min, max, precision, renderLabel, filter) {\n  const ret = [];\n  const minYear = min.getFullYear();\n  const maxYear = max.getFullYear();\n  const rank = precisionRankRecord[precision];\n  const selectedYear = parseInt(selected[0]);\n  const isInMinYear = selectedYear === minYear;\n  const isInMaxYear = selectedYear === maxYear;\n  const minDay = dayjs(min);\n  const maxDay = dayjs(max);\n  const minWeek = minDay.isoWeek();\n  const maxWeek = maxDay.isoWeek();\n  const minWeekday = minDay.isoWeekday();\n  const maxWeekday = maxDay.isoWeekday();\n  const selectedWeek = parseInt(selected[1]);\n  const isInMinWeek = isInMinYear && selectedWeek === minWeek;\n  const isInMaxWeek = isInMaxYear && selectedWeek === maxWeek;\n  const selectedYearWeeks = dayjs(`${selectedYear}-01-01`).isoWeeksInYear();\n  const generateColumn = (from, to, precision) => {\n    let column = [];\n    for (let i = from; i <= to; i++) {\n      column.push(i);\n    }\n    const prefix = selected.slice(0, precisionRankRecord[precision]);\n    const currentFilter = filter === null || filter === void 0 ? void 0 : filter[precision];\n    if (currentFilter && typeof currentFilter === 'function') {\n      column = column.filter(i => currentFilter(i, {\n        get date() {\n          const stringArray = [...prefix, i.toString()];\n          return convertStringArrayToDate(stringArray);\n        }\n      }));\n    }\n    return column;\n  };\n  if (rank >= precisionRankRecord.year) {\n    const lower = minYear;\n    const upper = maxYear;\n    const years = generateColumn(lower, upper, 'year');\n    ret.push(years.map(v => {\n      return {\n        label: renderLabel('year', v),\n        value: v.toString()\n      };\n    }));\n  }\n  if (rank >= precisionRankRecord.week) {\n    const lower = isInMinYear ? minWeek : 1;\n    const upper = isInMaxYear ? maxWeek : selectedYearWeeks;\n    const weeks = generateColumn(lower, upper, 'week');\n    ret.push(weeks.map(v => {\n      return {\n        label: renderLabel('week', v),\n        value: v.toString()\n      };\n    }));\n  }\n  if (rank >= precisionRankRecord['week-day']) {\n    const lower = isInMinWeek ? minWeekday : 1;\n    const upper = isInMaxWeek ? maxWeekday : 7;\n    const weeks = generateColumn(lower, upper, 'week-day');\n    ret.push(weeks.map(v => {\n      return {\n        label: renderLabel('week-day', v),\n        value: v.toString()\n      };\n    }));\n  }\n  return ret;\n}\nexport function convertDateToStringArray(date) {\n  if (!date) return [];\n  const day = dayjs(date);\n  return [day.isoWeekYear().toString(), day.isoWeek().toString(), day.isoWeekday().toString()];\n}\nexport function convertStringArrayToDate(value) {\n  var _a, _b, _c;\n  const yearString = (_a = value[0]) !== null && _a !== void 0 ? _a : '1900';\n  const weekString = (_b = value[1]) !== null && _b !== void 0 ? _b : '1';\n  const weekdayString = (_c = value[2]) !== null && _c !== void 0 ? _c : '1';\n  const day = dayjs().year(parseInt(yearString)).isoWeek(parseInt(weekString)).isoWeekday(parseInt(weekdayString)).hour(0).minute(0).second(0);\n  return day.toDate();\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}