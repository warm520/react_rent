{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\react_rent\\\\react_rent\\\\src\\\\pages\\\\Map\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport { useCity } from '../../utils/city';\nimport { Toast } from 'antd-mobile';\nimport { axiosAPI as axios } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BMapGL = window.BMapGL;\nexport default function Map() {\n  _s();\n  // 设置小屋房源列表\n  const [houseList, setHouseList] = useState([]);\n  // 获取当前城市\n  const [cityValue, cityLabel] = useCity();\n  useEffect(() => {\n    // 创建地图\n    const map = new BMapGL.Map('container');\n    // 渲染地图函数\n    const renderMap = () => {\n      // 设置鼠标的滚动缩放地图\n      map.enableScrollWheelZoom(true);\n      // 设置比例尺控件\n      var scaleCtrl = new BMapGL.ScaleControl();\n      // 设置缩放控件\n      var zoomCtrl = new BMapGL.ZoomControl();\n      // 添加比例尺控件\n      map.addControl(scaleCtrl);\n      // 添加缩放控件\n      map.addControl(zoomCtrl);\n      // 创建地址解析器\n      var myGeo = new BMapGL.Geocoder();\n      // 将地址解析结果显示在地图上\n      myGeo.getPoint(cityLabel, async point => {\n        if (point) {\n          // 地图定位当前城市\n          map.centerAndZoom(point, 11);\n          // 渲染房源覆盖物\n          renderOverLays(cityValue);\n        }\n      }, cityLabel);\n    };\n    // 获取房源信息 覆盖物渲染函数\n    const renderOverLays = async value => {\n      //加载提示\n      Toast.show({\n        icon: 'loading',\n        content: '加载中...'\n      });\n      // 获取房源信息\n      const result = await axios.get(`/area/map?id=${value}`);\n      // 获取缩放级别\n      const {\n        nextZoom,\n        type\n      } = getTypeAndZoom(map);\n      // setHouseList(result.data.body)\n      result.data.body.forEach(item => {\n        return createOverLays(item, nextZoom, type);\n      });\n      Toast.clear();\n    };\n    renderMap();\n    // 覆盖物渲染函数  判断渲染级别\n    const createOverLays = (item, nextZoom, type) => {\n      const {\n        label,\n        count,\n        coord,\n        value\n      } = item;\n      const {\n        latitude,\n        longitude\n      } = coord;\n      console.log(label, count, coord, value);\n      // 设置房源信息覆盖物位置\n      const areaPoint = new BMapGL.Point();\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n// 设置缩放级别函数\n_s(Map, \"jlSoFPLDZ4N9HR0LtnmDGIlMg2E=\", false, function () {\n  return [useCity];\n});\n_c = Map;\nconst getTypeAndZoom = map => {\n  const zoom = map.getZoom();\n  let nextZoom, type;\n  if (zoom >= 10 && zoom < 11) {\n    nextZoom = 13;\n    type = 'circle';\n  } else if (zoom >= 11 && zoom < 15) {\n    nextZoom = 15;\n    type = 'circle';\n  } else if (zoom >= 14 && zoom < 16) {\n    type = 'rect';\n  }\n  return {\n    nextZoom,\n    type\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","useCity","Toast","axiosAPI","axios","BMapGL","window","Map","houseList","setHouseList","cityValue","cityLabel","map","renderMap","enableScrollWheelZoom","scaleCtrl","ScaleControl","zoomCtrl","ZoomControl","addControl","myGeo","Geocoder","getPoint","point","centerAndZoom","renderOverLays","value","show","icon","content","result","get","nextZoom","type","getTypeAndZoom","data","body","forEach","item","createOverLays","clear","label","count","coord","latitude","longitude","console","log","areaPoint","Point","zoom","getZoom"],"sources":["E:/Github/react_rent/react_rent/src/pages/Map/index.jsx"],"sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport './index.css'\r\nimport { useCity } from '../../utils/city'\r\nimport { Toast } from 'antd-mobile'\r\nimport { axiosAPI as axios } from '../../utils'\r\nconst BMapGL = window.BMapGL\r\nexport default function Map() {\r\n  // 设置小屋房源列表\r\n  const [houseList,setHouseList] = useState([])\r\n  // 获取当前城市\r\n  const [cityValue,cityLabel] = useCity()\r\n  useEffect(()=>{\r\n    // 创建地图\r\n    const map = new BMapGL.Map('container')\r\n    // 渲染地图函数\r\n    const renderMap = ()=>{\r\n      // 设置鼠标的滚动缩放地图\r\n      map.enableScrollWheelZoom(true);\r\n      // 设置比例尺控件\r\n      var scaleCtrl = new BMapGL.ScaleControl()\r\n      // 设置缩放控件\r\n      var zoomCtrl = new BMapGL.ZoomControl()\r\n      // 添加比例尺控件\r\n      map.addControl(scaleCtrl)\r\n      // 添加缩放控件\r\n      map.addControl(zoomCtrl)\r\n      // 创建地址解析器\r\n      var myGeo = new BMapGL.Geocoder();\r\n      // 将地址解析结果显示在地图上\r\n      myGeo.getPoint(cityLabel,async(point)=>{\r\n        if(point){\r\n          // 地图定位当前城市\r\n          map.centerAndZoom(point, 11);\r\n          // 渲染房源覆盖物\r\n          renderOverLays(cityValue)\r\n        }\r\n      },cityLabel)\r\n    }\r\n    // 获取房源信息 覆盖物渲染函数\r\n    const renderOverLays = async (value)=>{\r\n      //加载提示\r\n      Toast.show({\r\n        icon:'loading',\r\n        content:'加载中...'\r\n      })\r\n      // 获取房源信息\r\n      const result = await axios.get(`/area/map?id=${value}`)\r\n      // 获取缩放级别\r\n      const{nextZoom,type} = getTypeAndZoom(map)\r\n      // setHouseList(result.data.body)\r\n      result.data.body.forEach((item)=>{\r\n        return createOverLays(item,nextZoom,type)\r\n      })\r\n\r\n      Toast.clear()\r\n    }\r\n    renderMap()\r\n    // 覆盖物渲染函数  判断渲染级别\r\n    const createOverLays = (item,nextZoom,type)=>{\r\n      const {label,count,coord,value} = item\r\n      const {latitude,longitude} = coord\r\n      console.log(label,count,coord,value)\r\n      // 设置房源信息覆盖物位置\r\n      const areaPoint = new BMapGL.Point()\r\n    }\r\n  })\r\n  return (\r\n    <div className=\"map\">\r\n      {/* 地图容器 */}\r\n      <div id=\"container\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// 设置缩放级别函数\r\nconst getTypeAndZoom = (map)=>{\r\n  const zoom = map.getZoom()\r\n  let nextZoom,type\r\n  if(zoom>=10 && zoom<11){\r\n    nextZoom = 13\r\n    type = 'circle'\r\n  }else if (zoom >= 11 && zoom < 15) {\r\n    nextZoom = 15\r\n    type = 'circle'\r\n} else if (zoom >= 14 && zoom < 16) {\r\n    type = 'rect'\r\n}\r\n\r\n  return {nextZoom,type}\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}